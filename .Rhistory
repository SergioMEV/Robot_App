library(tidyverse)
#> ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
#> ✔ ggplot2 3.3.2     ✔ purrr   0.3.4
#> ✔ tibble  3.0.3     ✔ dplyr   1.0.2
#> ✔ tidyr   1.1.2     ✔ stringr 1.4.0
#> ✔ readr   1.4.0     ✔ forcats 0.5.0
#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
#> ✖ dplyr::filter() masks stats::filter()
#> ✖ dplyr::lag()    masks stats::lag()
install.packages("tidyverse")
library(tidyverse)
mpg
#> # A tibble: 234 x 11
#>   manufacturer model displ  year   cyl trans      drv     cty   hwy fl    class
#>   <chr>        <chr> <dbl> <int> <int> <chr>      <chr> <int> <int> <chr> <chr>
#> 1 audi         a4      1.8  1999     4 auto(l5)   f        18    29 p     compa…
#> 2 audi         a4      1.8  1999     4 manual(m5) f        21    29 p     compa…
#> 3 audi         a4      2    2008     4 manual(m6) f        20    31 p     compa…
#> 4 audi         a4      2    2008     4 auto(av)   f        21    30 p     compa…
#> 5 audi         a4      2.8  1999     6 auto(l5)   f        16    26 p     compa…
#> 6 audi         a4      2.8  1999     6 manual(m5) f        18    26 p     compa…
#> # … with 228 more rows
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = <DATA>) +
<GEOM_FUNCTION>(mapping = aes(<MAPPINGS>))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
#> Warning: Using size for a discrete variable is not advised.
# Left
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
# Right
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
# left
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
# right
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
stat_count(mapping = aes(x = cut))
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median
)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), position = "jitter")
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
1 / 200 * 30
clear
library(nycflights13)
library(tidyverse)
mpg
#> # A tibble: 234 x 11
#>   manufacturer model displ  year   cyl trans      drv     cty   hwy fl    class
#>   <chr>        <chr> <dbl> <int> <int> <chr>      <chr> <int> <int> <chr> <chr>
#> 1 audi         a4      1.8  1999     4 auto(l5)   f        18    29 p     compa…
#> 2 audi         a4      1.8  1999     4 manual(m5) f        21    29 p     compa…
#> 3 audi         a4      2    2008     4 manual(m6) f        20    31 p     compa…
#> 4 audi         a4      2    2008     4 auto(av)   f        21    30 p     compa…
#> 5 audi         a4      2.8  1999     6 auto(l5)   f        16    26 p     compa…
#> 6 audi         a4      2.8  1999     6 manual(m5) f        18    26 p     compa…
#> # … with 228 more rows
ggplot(data = mpg)
install.packages("tidyverse")
library(tidyverse)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ cyl)
library(dplyr)
library(nycflights13)
not_cancelled <- flights %>%
filter(!is.na(dep_delay)█, !is.na(arr_delay))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(mean = mean(dep_delay))
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = carat), binwidth = 0.5)
library(dplyr)
library(nycflights13)
not_cancelled <- flights %>%
filter(!is.na(dep_delay)█, !is.na(arr_delay))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(mean = mean(dep_delay))
install.packages("dplyr")
install.packages("dplyr")
library(nycflights13)
library(dplyr)
install.packages(nycflights13)
install.packages("nycflights13")
library(nycflights13)
library(dplyr)
library(nycflights13)
not_cancelled <- flights %>%
filter(!is.na(dep_delay)█, !is.na(arr_delay))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(mean = mean(dep_delay))
library(dplyr)
library(nycflights13)
not_cancelled <- flights %>%
filter(!is.na(dep_delay)█, !is.na(arr_delay))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(mean = mean(dep_delay))
ggplot(data = diamonds) +
geom_count(mapping = aes(x = cut, y = color))
install.packages("ggplot")
library("ggplot")
library(qrcode)
intall.packages("qrcode")
install.packages("qrcode")
library(qrcode)
qrcode_gen('https://eliott-fernanda.cs.grinnell.edu/home/324-326/')
qrcode_gen(
'https://eliott-fernanda.cs.grinnell.edu/home/324-326/',
ErrorCorrectionLevel = "L",
dataOutput = FALSE,
plotQRcode = TRUE,
wColor = "White",
bColor = "blue",
mask = 1,
softLimitFlag = TRUE
)
install.packages('wordcloud')
library('wordcloud')
install.packages('wordcloud2')
library('wordcloud2')
wordcloud2(data=demoFreq, size=1.6)
wordcloud2(data=demoFreq, size=1.1)
data <- mtcars[ , c(1,3:6)]
plot(data , pch=20 , cex=1.5 , col="#69b3a2")
data("Seatbelts")
Seatbelts.df <- as.data.frame(Seatbelts)
pairs(Seatbelts)
install.packages("cowsay")
library("cowsay")
say(what = "Cannot index object of type 'cat food'.", by = "cat", type = "warning")
library(beepr)
install.packages("beepr")
library(beepr)
beep(5
beep(5)
beep(5)
install.packages("yihui")
install.packages("yihui/fun")
install.packages("fun")
library(fun)
mine_sweeper(width = 10, height = 10, mines = 20, cheat = FALSE)
if (interactive()) {
if (.Platform$OS.type == "windows")
x11() else x11(type = "Xlib")
mine_sweeper()
}
mine_sweeper(width = 10, height = 10, mines = 20, cheat = FALSE)
library(ggplot2)
mtcars %>%
filter(carb > 1) %>%
group_by(gear) %>%
summarize(avg_mpg = mean(mpg)) %>%
ggplot(aes(x = gear, y = avg_mpg)) +
geom_bar(stat = "identity")
install.packages("magrittr")
install.packages("magrittr")
library(magrittr)
mtcars %>%
filter(carb > 1) %>%
group_by(gear) %>%
summarize(avg_mpg = mean(mpg)) %>%
ggplot(aes(x = gear, y = avg_mpg)) +
geom_bar(stat = "identity")
library(ggplot2)
mtcars %>%
filter(carb > 1) %>%
group_by(gear) %>%
summarize(avg_mpg = mean(mpg)) %>%
ggplot(aes(x = gear, y = avg_mpg)) +
geom_bar(stat = "identity")
library(dplyr)
mtcars %>%
filter(carb > 1) %>%
group_by(gear) %>%
summarize(avg_mpg = mean(mpg)) %>%
ggplot(aes(x = gear, y = avg_mpg)) +
geom_bar(stat = "identity")
permutations(3,2,letters[1:3])
library(permutations)
install.packages("gtools")
library(gtools)
permutations(3,2,letters[1:3])
permutations(3,3,letters[1:3])
permutations(3,3,letters[1:3],repeats=TRUE)
library(shiny); runApp('Desktop/shiny.rstudio.com-tutorial/part-1-code/01-template.R')
library(shiny)
ui <- fluidPage("Hello world")
server <- function(input, output) {}
shinyApp(ui = ui, server = server)
devtools::install_github("rstudio/shinyapps")
load("~/Desktop/shiny.rstudio.com-tutorial/part-2-code/08-reactiveValues.R")
load("~/Desktop/shiny.rstudio.com-tutorial/part-1-code/02-hist-app.R")
shiny::runApp('Desktop/Round_2_App')
runApp('Desktop/Round_2_App')
shiny::runApp()
shiny::runApp()
runApp()
